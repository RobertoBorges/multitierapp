name: BookShop CD

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        options:
          - dev
          - test
          - prod

jobs:
  deploy_to_dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.environment == 'dev'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Build and Publish
      run: |
        dotnet publish src/BookShop.Web/BookShop.Web.csproj -c Release -o ./publish
    
    - name: Deploy Infrastructure
      working-directory: ./infra
      run: |
        ./deploy.ps1 -ResourceGroupName ${{ secrets.RESOURCE_GROUP_DEV }} -Environment dev
      shell: pwsh
    
    - name: Deploy Application to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME_DEV }}
        package: ./publish
    
    - name: Run Smoke Tests
      run: |
        # Add health check verification
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ secrets.WEBAPP_NAME_DEV }}.azurewebsites.net/health)
        if [ "$response" != "200" ]; then
          echo "Health check failed with status $response"
          exit 1
        fi
        echo "Smoke tests passed!"

  deploy_to_test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: deploy_to_dev
    if: github.event.inputs.environment == 'test'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Build and Publish
      run: |
        dotnet publish src/BookShop.Web/BookShop.Web.csproj -c Release -o ./publish
    
    - name: Deploy Infrastructure
      working-directory: ./infra
      run: |
        ./deploy.ps1 -ResourceGroupName ${{ secrets.RESOURCE_GROUP_TEST }} -Environment test
      shell: pwsh
    
    - name: Deploy Application to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME_TEST }}
        package: ./publish
    
    - name: Run Integration Tests
      run: |
        dotnet test src/BookShop.IntegrationTests/BookShop.IntegrationTests.csproj --filter Category=Integration

  deploy_to_prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy_to_test
    if: github.event.inputs.environment == 'prod'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Build and Publish
      run: |
        dotnet publish src/BookShop.Web/BookShop.Web.csproj -c Release -o ./publish
    
    - name: Deploy Infrastructure
      working-directory: ./infra
      run: |
        ./deploy.ps1 -ResourceGroupName ${{ secrets.RESOURCE_GROUP_PROD }} -Environment prod
      shell: pwsh
    
    - name: Deploy Application to Azure Web App with Slot
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME_PROD }}
        slot-name: 'staging'
        package: ./publish
    
    - name: Run Smoke Tests on Staging Slot
      run: |
        # Add health check verification
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ secrets.WEBAPP_NAME_PROD }}-staging.azurewebsites.net/health)
        if [ "$response" != "200" ]; then
          echo "Health check failed with status $response"
          exit 1
        fi
        echo "Smoke tests passed on staging!"
    
    - name: Swap Slots
      run: |
        az webapp deployment slot swap --resource-group ${{ secrets.RESOURCE_GROUP_PROD }} --name ${{ secrets.WEBAPP_NAME_PROD }} --slot staging --target-slot production
    
    - name: Verify Production Deployment
      run: |
        # Add health check verification
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ secrets.WEBAPP_NAME_PROD }}.azurewebsites.net/health)
        if [ "$response" != "200" ]; then
          echo "Health check failed with status $response"
          exit 1
        fi
        echo "Production deployment verified!"
